import React, { Component } from 'react';
import ReactDOM from 'react-dom';
import server from '../fetchServer'
import { togglePopup, setPopupContent, setReactContent } from './popupMethods';
import $ from 'jquery';
import Cookies from 'js-cookie';
import { uuid } from 'uuidv4';
import { date } from '../stringDate';

export default class UserInfo extends Component {
    componentDidMount() {
        $.post(server + '/api/getAllUsers', { token: Cookies.get('token') }, result => {
            if (result.error) {
                setPopupContent('Error', result.error);
                togglePopup(true);
            } else {
                var users = [];
                for (var i in result.users) {
                    users.push(this.newRow(result.users[i]));
                }
                ReactDOM.render(users, document.getElementById('userTable'));
            }
        });
    }

    newRow(user) {
        var membership = '';
        var memberSelect = <div>
            <select id="memberSelect" onChange={() => {
                $.post(server + '/api/changeMembership', {
                    id: user.id,
                    membership: document.getElementById('memberSelect').selectedIndex
                }, result => {
                    if (result.error) {
                        togglePopup(false);
                        setPopupContent('Error', result.error);
                        togglePopup(true);
                    } else {
                        window.location.reload();
                    }
                });
            }}>
                <option>No Membership</option>
                <option>Monthly</option>
                <option>6 Months</option>
                <option>1 Year</option>
            </select>
        </div>
        if (user.membership === 1) {
            membership = <button className="btn btn-primary" onClick={() => {
                setReactContent('Change Membership', memberSelect);
                document.getElementById('memberSelect').selectedIndex = user.membership;
                togglePopup(true);
            }}>Monthly</button>;
        } else if (user.membership === 2) {
            membership = <button className="btn btn-primary" onClick={() => {
                setReactContent('Change Membership', memberSelect);
                document.getElementById('memberSelect').selectedIndex = user.membership;
                togglePopup(true);
            }}>6 Months</button>;
        } else if (user.membership === 3) {
            membership = <button className="btn btn-primary" onClick={() => {
                setReactContent('Change Membership', memberSelect);
                document.getElementById('memberSelect').selectedIndex = user.membership;
                togglePopup(true);
            }}>1 Year</button>;
        } else {
            membership = <button className="btn btn-secondary" onClick={() => {
                setReactContent('Change Membership', memberSelect);
                document.getElementById('memberSelect').selectedIndex = user.membership;
                togglePopup(true);
            }}>No Membership</button>;
        }

        var expiry = '';
        if (user.membership_expiry != null) {
            expiry = <button className="btn btn-primary" onClick={() => {
                setReactContent('Change Date', <div><input type="date"></input><button onClick={(e) => {
                    var newDate = new Date(e.target.parentElement.children[0].value);
                    $.post(server + '/api/setMembershipExpiry', {
                        id: user.id,
                        expiry: newDate.getTime()/1000
                    }, result => {
                        if (result.error) {
                            togglePopup(false);
                            setPopupContent('Error', result.error);
                            togglePopup(true);
                        } else {
                            window.location.reload();
                        }
                    });
                }} className="btn btn-primary">Change</button></div>);
                togglePopup(true);
            }}>{date(new Date(user.membership_expiry))}</button>;
        }
        var join_date = user.join_date != null ?
            date(new Date(user.join_date)) :
            '';

        return <tr id={'r-' + user.id} key={uuid()}>
            <td>{user.first_name}</td>
            <td>{user.last_name}</td>
            <td>{user.email}</td>
            <td>{user.phone}</td>
            <td>{membership}</td>
            <td>{expiry}</td>
            <td>{join_date}</td>
            <td>{user.service}</td>
        </tr>;
    }

    render() {
        return (
            <div className="text-center">
                <h3 style={{margin: "1em"}}>Users Information</h3>
		<div id="salesFields">
                    <input placeholder="First Name" id="fNameInput" className="form-control sales-in$
                    <input placeholder="Last Name" id="lNameInput" className="form-control sa$
                    <input placeholder="Email" id="emailInput" className="form-control sales-input" onchange={this.filterTable}
                </div>
                <table className="table table-striped w-75" style={{margin: "0 auto"}}>
                    <thead className="thead thead-dark">
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Email</th>
                            <th>Phone</th>
                            <th>Membership</th>
                            <th>Membership Expires</th>
                            <th>Registered On</th>
                            <th>Most Bought Service</th>
                        </tr>
                    </thead>
                    <tbody id="userTable"></tbody>
                </table>
            </div>
        )
    }
}
